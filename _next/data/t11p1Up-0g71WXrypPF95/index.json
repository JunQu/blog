{"pageProps":{"postsData":[{"id":"MDEwOkRpc2N1c3Npb24zNTA5ODU5","author":{"url":"https://github.com/JunQu","login":"JunQu","avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4"},"body":"## 为什么要选择 GitHub 作为博客平台？\r\n作为博客第一篇，那么就首先说说为什么选择在 GitHub 写博客\r\n在众多平台中我选择 GitHub 作为我的博客存放地。\r\n\r\n### 国内平台\r\n国内的原来的 blog 平台，例如 CSDN、博客园、简书、网易博客、新浪博客等等，后面两个已经是关闭趋势，前面的平台稳定性和内容美观都是让人有点感觉跟不上时代。当然现在的一些新平台的兴起，例如语雀、飞书等，这些不仅仅是作为博客的平台，他们的工具链我也不喜欢。\r\n\r\n当然，在国内的博客最大的问题是审查或者说你的内容违规咋办。虽然小小的博客没有什么好说的，我也不会做任何违反明文上法律法规的事情，但是这个黑盒谁也不知道，博客的内容还是希望能完整的存着。所以无论语雀吹的多好听（味太浓），抑或是强大的飞书涵盖了很多功能，我想我都不会去选择他们。\r\n\r\n国内平台的优点当然是利于访问和搜索，就是利于在国内传播，这点对我吸引不大，因为我应该不会更新很多文章。\r\n\r\n### 国外平台\r\n国外有`dev.to`  `medium` `blogger`等等平台，非常多的平台做这个，最著名的可能是宣传内容为王的`WordPress`。\r\n国外的平台我想对的用的比较少，而且在一堆英文里你写中文有点怪怪的，这当然还是我英语不行的问题。不过`WordPress`我其实是推荐的，因为它十分友好，插件丰富，假如不用GitHub那么我可能选择它作为博客平台。\r\n\r\n### GitHub 作为博客\r\n选择博客的平台首先是要大，大平台才能存活的更久。小平台风险很大，博客最要紧的首先要能保存下来。我观察那些自建博客的，链接能坚持三年以上的不到两成。\r\n\r\n大平台还有一个好处是免费。家大业大的，只要不遇上谷歌的砍刀，所以一定不是特别边缘的业务，或者大平台里面用的人都很少的业务，那么大平台对于个人薅一点羊毛不会在意，甚至是支持的。\r\n\r\n选择 GitHub 是因为它是特殊的一个网站，它既能在国内又能在国外访问，虽然某些时候被延时或者被国内浏览器警告，但是访问它并不会像其他国外网站那么困难。这样边缘的平台其实不多。\r\n\r\nGitHub 对 md 文件十分友好，我写作常用 md 格式文档直接写，这一点对我很重要。它对md的快速编辑和预览都是我选择它的重要理由。\r\n\r\n选择Discussions而不是Issues，虽然Discussions此时仍在beta状态，但是我相信它很快就要稳定下来了，而此时Issues即将面临大改，Issues将会改成表格形式，Issues更偏向管理项目了，而我只是想发发文章，Discussions还能避免其他人发文章。相比之下Discussions在目前时间点是比Issues更适合作为一个博客的选择。\r\n\r\nDiscussions能满足博客的即刻编辑发布、搜索、分类、标签一些基础的功能，还带一个评论的系统，甚至你还能上传一些图片和小视频。缺点是SEO可能不太好，不利于博客的传播，而且国内访问较慢。不过这样同时的，你选择了一批读者，评论可能会友好的一些。\r\n\r\n","bodyHTML":"<h2 dir=\"auto\">为什么要选择 GitHub 作为博客平台？</h2>\n<p dir=\"auto\">作为博客第一篇，那么就首先说说为什么选择在 GitHub 写博客<br>\n在众多平台中我选择 GitHub 作为我的博客存放地。</p>\n<h3 dir=\"auto\">国内平台</h3>\n<p dir=\"auto\">国内的原来的 blog 平台，例如 CSDN、博客园、简书、网易博客、新浪博客等等，后面两个已经是关闭趋势，前面的平台稳定性和内容美观都是让人有点感觉跟不上时代。当然现在的一些新平台的兴起，例如语雀、飞书等，这些不仅仅是作为博客的平台，他们的工具链我也不喜欢。</p>\n<p dir=\"auto\">当然，在国内的博客最大的问题是审查或者说你的内容违规咋办。虽然小小的博客没有什么好说的，我也不会做任何违反明文上法律法规的事情，但是这个黑盒谁也不知道，博客的内容还是希望能完整的存着。所以无论语雀吹的多好听（味太浓），抑或是强大的飞书涵盖了很多功能，我想我都不会去选择他们。</p>\n<p dir=\"auto\">国内平台的优点当然是利于访问和搜索，就是利于在国内传播，这点对我吸引不大，因为我应该不会更新很多文章。</p>\n<h3 dir=\"auto\">国外平台</h3>\n<p dir=\"auto\">国外有<code>dev.to</code>  <code>medium</code> <code>blogger</code>等等平台，非常多的平台做这个，最著名的可能是宣传内容为王的<code>WordPress</code>。<br>\n国外的平台我想对的用的比较少，而且在一堆英文里你写中文有点怪怪的，这当然还是我英语不行的问题。不过<code>WordPress</code>我其实是推荐的，因为它十分友好，插件丰富，假如不用GitHub那么我可能选择它作为博客平台。</p>\n<h3 dir=\"auto\">GitHub 作为博客</h3>\n<p dir=\"auto\">选择博客的平台首先是要大，大平台才能存活的更久。小平台风险很大，博客最要紧的首先要能保存下来。我观察那些自建博客的，链接能坚持三年以上的不到两成。</p>\n<p dir=\"auto\">大平台还有一个好处是免费。家大业大的，只要不遇上谷歌的砍刀，所以一定不是特别边缘的业务，或者大平台里面用的人都很少的业务，那么大平台对于个人薅一点羊毛不会在意，甚至是支持的。</p>\n<p dir=\"auto\">选择 GitHub 是因为它是特殊的一个网站，它既能在国内又能在国外访问，虽然某些时候被延时或者被国内浏览器警告，但是访问它并不会像其他国外网站那么困难。这样边缘的平台其实不多。</p>\n<p dir=\"auto\">GitHub 对 md 文件十分友好，我写作常用 md 格式文档直接写，这一点对我很重要。它对md的快速编辑和预览都是我选择它的重要理由。</p>\n<p dir=\"auto\">选择Discussions而不是Issues，虽然Discussions此时仍在beta状态，但是我相信它很快就要稳定下来了，而此时Issues即将面临大改，Issues将会改成表格形式，Issues更偏向管理项目了，而我只是想发发文章，Discussions还能避免其他人发文章。相比之下Discussions在目前时间点是比Issues更适合作为一个博客的选择。</p>\n<p dir=\"auto\">Discussions能满足博客的即刻编辑发布、搜索、分类、标签一些基础的功能，还带一个评论的系统，甚至你还能上传一些图片和小视频。缺点是SEO可能不太好，不利于博客的传播，而且国内访问较慢。不过这样同时的，你选择了一批读者，评论可能会友好的一些。</p>","bodyText":"为什么要选择 GitHub 作为博客平台？\n作为博客第一篇，那么就首先说说为什么选择在 GitHub 写博客\n在众多平台中我选择 GitHub 作为我的博客存放地。\n国内平台\n国内的原来的 blog 平台，例如 CSDN、博客园、简书、网易博客、新浪博客等等，后面两个已经是关闭趋势，前面的平台稳定性和内容美观都是让人有点感觉跟不上时代。当然现在的一些新平台的兴起，例如语雀、飞书等，这些不仅仅是作为博客的平台，他们的工具链我也不喜欢。\n当然，在国内的博客最大的问题是审查或者说你的内容违规咋办。虽然小小的博客没有什么好说的，我也不会做任何违反明文上法律法规的事情，但是这个黑盒谁也不知道，博客的内容还是希望能完整的存着。所以无论语雀吹的多好听（味太浓），抑或是强大的飞书涵盖了很多功能，我想我都不会去选择他们。\n国内平台的优点当然是利于访问和搜索，就是利于在国内传播，这点对我吸引不大，因为我应该不会更新很多文章。\n国外平台\n国外有dev.to  medium blogger等等平台，非常多的平台做这个，最著名的可能是宣传内容为王的WordPress。\n国外的平台我想对的用的比较少，而且在一堆英文里你写中文有点怪怪的，这当然还是我英语不行的问题。不过WordPress我其实是推荐的，因为它十分友好，插件丰富，假如不用GitHub那么我可能选择它作为博客平台。\nGitHub 作为博客\n选择博客的平台首先是要大，大平台才能存活的更久。小平台风险很大，博客最要紧的首先要能保存下来。我观察那些自建博客的，链接能坚持三年以上的不到两成。\n大平台还有一个好处是免费。家大业大的，只要不遇上谷歌的砍刀，所以一定不是特别边缘的业务，或者大平台里面用的人都很少的业务，那么大平台对于个人薅一点羊毛不会在意，甚至是支持的。\n选择 GitHub 是因为它是特殊的一个网站，它既能在国内又能在国外访问，虽然某些时候被延时或者被国内浏览器警告，但是访问它并不会像其他国外网站那么困难。这样边缘的平台其实不多。\nGitHub 对 md 文件十分友好，我写作常用 md 格式文档直接写，这一点对我很重要。它对md的快速编辑和预览都是我选择它的重要理由。\n选择Discussions而不是Issues，虽然Discussions此时仍在beta状态，但是我相信它很快就要稳定下来了，而此时Issues即将面临大改，Issues将会改成表格形式，Issues更偏向管理项目了，而我只是想发发文章，Discussions还能避免其他人发文章。相比之下Discussions在目前时间点是比Issues更适合作为一个博客的选择。\nDiscussions能满足博客的即刻编辑发布、搜索、分类、标签一些基础的功能，还带一个评论的系统，甚至你还能上传一些图片和小视频。缺点是SEO可能不太好，不利于博客的传播，而且国内访问较慢。不过这样同时的，你选择了一批读者，评论可能会友好的一些。","category":{"id":"DIC_kwDOF33ty84B-m5Y","name":"Article","emoji":":memo:","description":"My blog articles"},"comments":{"nodes":[]},"createdAt":"2021-08-09T16:00:15Z","labels":{"nodes":[]},"lastEditedAt":null,"number":4,"publishedAt":"2021-08-09T16:00:15Z","resourcePath":"/JunQu/blog/discussions/4","title":"选择 GitHub discussions 作为博客","updatedAt":"2021-08-19T14:23:57Z","upvoteCount":1,"url":"https://github.com/JunQu/blog/discussions/4","viewerCanDelete":true,"urlPath":"选择-GitHub-discussions-作为博客-4"},{"id":"MDEwOkRpc2N1c3Npb24zNTI5Mjc3","author":{"url":"https://github.com/JunQu","login":"JunQu","avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4"},"body":"《天龙八部（新修版）》看到快过半了，目前是阿朱被萧峰打死的那一段，悲痛的我放下书三天没看。我先做个梗概，慢慢更新和完善：\r\n\r\n### 少年游\r\n青衫少年段誉离家出走，遇到茶商马五德，随即跟随至无量剑，无量剑的东西剑宗比剑争雄，段誉贫嘴而被打了一耳光，段誉被追杀之际钟灵儿把段誉救下，这时神龙帮传信毒死两人后，众人围观段誉姐弟，钟灵儿用闪电貂毒伤东宗掌门左子穆带着段誉逃离无量山。","bodyHTML":"<p dir=\"auto\">《天龙八部（新修版）》看到快过半了，目前是阿朱被萧峰打死的那一段，悲痛的我放下书三天没看。我先做个梗概，慢慢更新和完善：</p>\n<h3 dir=\"auto\">少年游</h3>\n<p dir=\"auto\">青衫少年段誉离家出走，遇到茶商马五德，随即跟随至无量剑，无量剑的东西剑宗比剑争雄，段誉贫嘴而被打了一耳光，段誉被追杀之际钟灵儿把段誉救下，这时神龙帮传信毒死两人后，众人围观段誉姐弟，钟灵儿用闪电貂毒伤东宗掌门左子穆带着段誉逃离无量山。</p>","bodyText":"《天龙八部（新修版）》看到快过半了，目前是阿朱被萧峰打死的那一段，悲痛的我放下书三天没看。我先做个梗概，慢慢更新和完善：\n少年游\n青衫少年段誉离家出走，遇到茶商马五德，随即跟随至无量剑，无量剑的东西剑宗比剑争雄，段誉贫嘴而被打了一耳光，段誉被追杀之际钟灵儿把段誉救下，这时神龙帮传信毒死两人后，众人围观段誉姐弟，钟灵儿用闪电貂毒伤东宗掌门左子穆带着段誉逃离无量山。","category":{"id":"DIC_kwDOF33ty84B-m5Y","name":"Article","emoji":":memo:","description":"My blog articles"},"comments":{"nodes":[]},"createdAt":"2021-08-19T14:43:56Z","labels":{"nodes":[]},"lastEditedAt":null,"number":5,"publishedAt":"2021-08-19T14:43:56Z","resourcePath":"/JunQu/blog/discussions/5","title":"天龙八部梗概","updatedAt":"2021-08-19T14:44:49Z","upvoteCount":1,"url":"https://github.com/JunQu/blog/discussions/5","viewerCanDelete":true,"urlPath":"天龙八部梗概-5"},{"id":"D_kwDOF33ty84ANns7","author":{"url":"https://github.com/JunQu","login":"JunQu","avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4"},"body":"### 测试文章\r\n\r\n测试一个橘子 🍊\r\n我们应该往什么方向去寻找\r\n\r\n> 猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫\r\n\r\n**如何提问**\r\n\r\n猫如果面对生活\r\n\r\n可爱 _猫猫的慵懒_ 喵喵\r\n\r\nlorem `code` space\r\n\r\n[猫](https://www.google.com/search?q=猫)猫的\r\n\r\n\r\n- [ ] 做一件事\r\n- [x] 做两件事\r\n- [ ] 看一本书\r\n\r\n- 一只猫\r\n- 一头羊\r\n- 一条狗\r\n\r\n1. 放弃\r\n2. 拿起\r\n3. 舍掉\r\n\r\n### 放上图片\r\n![5d68b9b54dbe99138 png_e1080](https://user-images.githubusercontent.com/39846309/133184700-d689ae0d-3810-4d93-8968-658a22fd20ac.png)\r\n### 测试视频\r\n\r\nhttps://user-images.githubusercontent.com/39846309/133184940-1ff0146f-04b1-4fcc-9d8b-6e828cc317b9.mp4\r\n\r\n### 最后\r\n坚持才是胜利\r\n\r\n","bodyHTML":"<h3 dir=\"auto\">测试文章</h3>\n<p dir=\"auto\">测试一个橘子 <g-emoji class=\"g-emoji\" alias=\"tangerine\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f34a.png\">🍊</g-emoji><br>\n我们应该往什么方向去寻找</p>\n<blockquote>\n<p dir=\"auto\">猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫</p>\n</blockquote>\n<p dir=\"auto\"><strong>如何提问</strong></p>\n<p dir=\"auto\">猫如果面对生活</p>\n<p dir=\"auto\">可爱 <em>猫猫的慵懒</em> 喵喵</p>\n<p dir=\"auto\">lorem <code>code</code> space</p>\n<p dir=\"auto\"><a href=\"https://www.google.com/search?q=%E7%8C%AB\" rel=\"nofollow\">猫</a>猫的</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> 做一件事</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> 做两件事</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> 看一本书</p>\n</li>\n<li>\n<p dir=\"auto\">一只猫</p>\n</li>\n<li>\n<p dir=\"auto\">一头羊</p>\n</li>\n<li>\n<p dir=\"auto\">一条狗</p>\n</li>\n</ul>\n<ol dir=\"auto\">\n<li>放弃</li>\n<li>拿起</li>\n<li>舍掉</li>\n</ol>\n<h3 dir=\"auto\">放上图片</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39846309/133184700-d689ae0d-3810-4d93-8968-658a22fd20ac.png\"><img src=\"https://user-images.githubusercontent.com/39846309/133184700-d689ae0d-3810-4d93-8968-658a22fd20ac.png\" alt=\"5d68b9b54dbe99138 png_e1080\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">测试视频</h3>\n<details open=\"\" class=\"details-reset border rounded-2\">\n  <summary class=\"px-3 py-2\">\n    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-camera-video\">\n    <path fill-rule=\"evenodd\" d=\"M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z\"></path>\n</svg>\n    <span aria-label=\"Video description file_example_MP4_480_1_5MG.mp4\" class=\"m-1\">file_example_MP4_480_1_5MG.mp4</span>\n    <span class=\"dropdown-caret\"></span>\n  </summary>\n\n  <video src=\"https://user-images.githubusercontent.com/39846309/133184940-1ff0146f-04b1-4fcc-9d8b-6e828cc317b9.mp4\" data-canonical-src=\"https://user-images.githubusercontent.com/39846309/133184940-1ff0146f-04b1-4fcc-9d8b-6e828cc317b9.mp4\" controls=\"controls\" muted=\"muted\" class=\"d-block rounded-bottom-2 border-top width-fit\" style=\"max-height:640px;\">\n\n  </video>\n</details>\n\n<h3 dir=\"auto\">最后</h3>\n<p dir=\"auto\">坚持才是胜利</p>","bodyText":"测试文章\n测试一个橘子 🍊\n我们应该往什么方向去寻找\n\n猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫猫\n\n如何提问\n猫如果面对生活\n可爱 猫猫的慵懒 喵喵\nlorem code space\n猫猫的\n\n\n 做一件事\n\n\n 做两件事\n\n\n 看一本书\n\n\n一只猫\n\n\n一头羊\n\n\n一条狗\n\n\n\n放弃\n拿起\n舍掉\n\n放上图片\n\n测试视频\n\n  \n    \n    \n\n    file_example_MP4_480_1_5MG.mp4\n    \n  \n\n  \n\n  \n\n\n最后\n坚持才是胜利","category":{"id":"DIC_kwDOF33ty84B-m5Y","name":"Article","emoji":":memo:","description":"My blog articles"},"comments":{"nodes":[{"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4","login":"JunQu","resourcePath":"/JunQu","url":"https://github.com/JunQu"},"bodyHTML":"<p dir=\"auto\">做个评论就很好 <g-emoji class=\"g-emoji\" alias=\"zany_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f92a.png\">🤪</g-emoji></p>","bodyText":"做个评论就很好 🤪","publishedAt":"2021-09-14T02:39:26Z","deletedAt":null,"updatedAt":"2021-09-14T02:39:36Z","url":"https://github.com/JunQu/blog/discussions/8#discussioncomment-1321502","upvoteCount":1},{"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4","login":"JunQu","resourcePath":"/JunQu","url":"https://github.com/JunQu"},"bodyHTML":"<p dir=\"auto\">第二条评论， 我们应该怎么帮 <g-emoji class=\"g-emoji\" alias=\"exploding_head\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f92f.png\">🤯</g-emoji></p>","bodyText":"第二条评论， 我们应该怎么帮 🤯","publishedAt":"2021-09-14T02:40:42Z","deletedAt":null,"updatedAt":"2021-09-14T02:40:52Z","url":"https://github.com/JunQu/blog/discussions/8#discussioncomment-1321506","upvoteCount":1}]},"createdAt":"2021-09-14T02:33:02Z","labels":{"nodes":[{"id":"MDU6TGFiZWwzMjc4OTMzODA0","name":"feature","color":"4B3F9B"},{"id":"MDU6TGFiZWwzMzUxMzg4NzQx","name":"生活","color":"C2E0C6"},{"id":"MDU6TGFiZWwzMzUxMzkwMTY2","name":"前端","color":"D93F0B"}]},"lastEditedAt":null,"number":8,"publishedAt":"2021-09-14T02:33:02Z","resourcePath":"/JunQu/blog/discussions/8","title":"这是一个测试的文章","updatedAt":"2021-09-14T02:40:53Z","upvoteCount":1,"url":"https://github.com/JunQu/blog/discussions/8","viewerCanDelete":true,"urlPath":"这是一个测试的文章-8"},{"id":"D_kwDOF33ty84APCG_","author":{"url":"https://github.com/JunQu","login":"JunQu","avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4"},"body":"## 前言\r\nPromise 是一个为了解决回调地狱 (callbackhell) 的方法，Promise 可以算作一种语法糖，出现的目的是为了让层层嵌套的回调变得扁平，而且确实很甜，node 现在新出的方法基本都是 Promise 的。\r\n可是我对Promise不太熟悉，可以使用，一直好奇他的原理，于是我决定手写一遍规范的Promise以加深自己的理解。\r\n\r\n## Promise 实现\r\n这里采用最通用的 [Promises/A+](https://promisesaplus.com/) 去尝试手写一个 Promise 。（此处代码大多来自网上，参考最后）因为大家实现其实差不太多，规范说的很详细，所以我直接参考他人代码，直到自己可以白板手写（为了面试）。\r\n","bodyHTML":"<h2 dir=\"auto\">前言</h2>\n<p dir=\"auto\">Promise 是一个为了解决回调地狱 (callbackhell) 的方法，Promise 可以算作一种语法糖，出现的目的是为了让层层嵌套的回调变得扁平，而且确实很甜，node 现在新出的方法基本都是 Promise 的。<br>\n可是我对Promise不太熟悉，可以使用，一直好奇他的原理，于是我决定手写一遍规范的Promise以加深自己的理解。</p>\n<h2 dir=\"auto\">Promise 实现</h2>\n<p dir=\"auto\">这里采用最通用的 <a href=\"https://promisesaplus.com/\" rel=\"nofollow\">Promises/A+</a> 去尝试手写一个 Promise 。（此处代码大多来自网上，参考最后）因为大家实现其实差不太多，规范说的很详细，所以我直接参考他人代码，直到自己可以白板手写（为了面试）。</p>","bodyText":"前言\nPromise 是一个为了解决回调地狱 (callbackhell) 的方法，Promise 可以算作一种语法糖，出现的目的是为了让层层嵌套的回调变得扁平，而且确实很甜，node 现在新出的方法基本都是 Promise 的。\n可是我对Promise不太熟悉，可以使用，一直好奇他的原理，于是我决定手写一遍规范的Promise以加深自己的理解。\nPromise 实现\n这里采用最通用的 Promises/A+ 去尝试手写一个 Promise 。（此处代码大多来自网上，参考最后）因为大家实现其实差不太多，规范说的很详细，所以我直接参考他人代码，直到自己可以白板手写（为了面试）。","category":{"id":"DIC_kwDOF33ty84B-m5Y","name":"Article","emoji":":memo:","description":"My blog articles"},"comments":{"nodes":[]},"createdAt":"2022-03-16T03:43:27Z","labels":{"nodes":[{"id":"MDU6TGFiZWwzMzUxMzkwMTY2","name":"前端","color":"D93F0B"}]},"lastEditedAt":null,"number":9,"publishedAt":"2022-03-16T03:43:27Z","resourcePath":"/JunQu/blog/discussions/9","title":"手写一个 Promise","updatedAt":"2022-03-16T03:43:37Z","upvoteCount":1,"url":"https://github.com/JunQu/blog/discussions/9","viewerCanDelete":true,"urlPath":"手写一个-Promise-9"},{"id":"D_kwDOF33ty84APJaA","author":{"url":"https://github.com/JunQu","login":"JunQu","avatarUrl":"https://avatars.githubusercontent.com/u/39846309?u=bdd025c2cea5be24dd7e0833a2d04b50bb4fffb5&v=4"},"body":"GPG 即 [GnuPG](https://gnupg.org/) 是一种混合加密程序，使用场景是邮件加密、文件加密和Git签名等等这些需要加密保护的地方， 是[PGP](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) 的开源免费实现。\r\n简单的说是为了 Git 签名才去了解这个东西的，给自己的 commit 添加一个绿标验证自己\r\n<img width=\"390\" alt=\"image\" src=\"https://user-images.githubusercontent.com/39846309/160537070-ae4df4d6-3e34-4d30-b9c8-f5f125d5f155.png\">\r\n\r\n而且在 Mac 环境下，这个东西确实也蛮方便。\r\n假如你不使用这个东西，会有几个小小安全问题在 GitHub 这个平台上\r\n例如前段时间的恶作剧  Linus Torvalds [delete linux because it sucks](https://github.com/torvalds/linux/tree/8bcab0346d4fcf21b97046eb44db8cf37ddd6da0)\r\n<img width=\"634\" alt=\"image\" src=\"https://user-images.githubusercontent.com/39846309/160537819-83d0e34f-692d-46bf-9a14-26dbaf74e2d4.png\">\r\n因此你可以利用它，让 Linus Torvalds 大神成为你某个 repo 的 contributors  🤪，（我不支持这样的恶作剧 ）[这篇文章在这](https://dev.to/martiliones/how-i-got-linus-torvalds-in-my-contributors-on-github-3k4g)\r\n![image](https://user-images.githubusercontent.com/39846309/160538497-9a5084d5-bf8c-46e9-b69e-8bebd860d4fd.png) \r\n\r\n以及之前的 [GitHub CEO 澄清自己没有泄漏源代码事件](https://news.ycombinator.com/item?id=24994746)，\r\n不知道这背后的原因是什么，反正 GitHub 并没有去如期的验证身份堵上这个漏洞，而且这个漏洞是空开的秘密了。于是大家纷纷转向使用 GPG 来验证仓库，现在已经不少大型仓库都要求你的 commit 是经过签名的，而 GitHub 支持 GPG 签名（目前好像只支持它），那么使用 GPG 不仅仅是时髦的事情，必须是要求自己去做的事情，于是我学习了 GPG 的使用方法。\r\n\r\n### 使用 GPG\r\n这方面由于更新和维护，以及其他的问题出现，对此我很可能是过时的，这里我推荐这个地址\r\n\r\n[Methods of Signing with GPG](https://gist.github.com/troyfontaine/18c9146295168ee9ca2b30c00bd1b41e)\r\n\r\n按照上面的步骤一步步的基本上能够安装好。\r\n当然使用 jetbrain 公司的 IDE 也支持 GPG ， 参考它自己的文档不是很够，把上面的步骤做完，我的 Webstrom 2022 EAP 就快速识别了 GPG ，后面几乎不用我动手直接完成了签名，不得不说它做的真不错，可惜我买了一年的许可证刚过期，而老版本不支持 GPG （默默吐槽一下 Webstorm 更新解决的问题真的不太够，这方面真的要向 VS code 看看）。\r\n\r\n### 参考文章\r\n- [Sign commits with GPG keys](https://www.jetbrains.com/help/webstorm/set-up-GPG-commit-signing.html)\r\n- [在Github上使用GPG的全过程](https://zhuanlan.zhihu.com/p/76861431)\r\n- [gpg failed to sign the data fatal](https://stackoverflow.com/questions/39494631/gpg-failed-to-sign-the-data-fatal-failed-to-write-commit-object-git-2-10-0)\r\n- [Displaying verification statuses for all of your commits](https://docs.github.com/en/authentication/managing-commit-signature-verification/displaying-verification-statuses-for-all-of-your-commits)\r\n- [How I got Linus Torvalds in my contributors on GitHub](https://dev.to/martiliones/how-i-got-linus-torvalds-in-my-contributors-on-github-3k4g)\r\n- [GitHub Source Code Leak](https://news.ycombinator.com/item?id=24994746)","bodyHTML":"<p dir=\"auto\">GPG 即 <a href=\"https://gnupg.org/\" rel=\"nofollow\">GnuPG</a> 是一种混合加密程序，使用场景是邮件加密、文件加密和Git签名等等这些需要加密保护的地方， 是<a href=\"https://en.wikipedia.org/wiki/Pretty_Good_Privacy\" rel=\"nofollow\">PGP</a> 的开源免费实现。<br>\n简单的说是为了 Git 签名才去了解这个东西的，给自己的 commit 添加一个绿标验证自己<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39846309/160537070-ae4df4d6-3e34-4d30-b9c8-f5f125d5f155.png\"><img width=\"390\" alt=\"image\" src=\"https://user-images.githubusercontent.com/39846309/160537070-ae4df4d6-3e34-4d30-b9c8-f5f125d5f155.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">而且在 Mac 环境下，这个东西确实也蛮方便。<br>\n假如你不使用这个东西，会有几个小小安全问题在 GitHub 这个平台上<br>\n例如前段时间的恶作剧  Linus Torvalds <a href=\"https://github.com/torvalds/linux/tree/8bcab0346d4fcf21b97046eb44db8cf37ddd6da0\">delete linux because it sucks</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39846309/160537819-83d0e34f-692d-46bf-9a14-26dbaf74e2d4.png\"><img width=\"634\" alt=\"image\" src=\"https://user-images.githubusercontent.com/39846309/160537819-83d0e34f-692d-46bf-9a14-26dbaf74e2d4.png\" style=\"max-width: 100%;\"></a><br>\n因此你可以利用它，让 Linus Torvalds 大神成为你某个 repo 的 contributors  <g-emoji class=\"g-emoji\" alias=\"zany_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f92a.png\">🤪</g-emoji>，（我不支持这样的恶作剧 ）<a href=\"https://dev.to/martiliones/how-i-got-linus-torvalds-in-my-contributors-on-github-3k4g\" rel=\"nofollow\">这篇文章在这</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39846309/160538497-9a5084d5-bf8c-46e9-b69e-8bebd860d4fd.png\"><img src=\"https://user-images.githubusercontent.com/39846309/160538497-9a5084d5-bf8c-46e9-b69e-8bebd860d4fd.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">以及之前的 <a href=\"https://news.ycombinator.com/item?id=24994746\" rel=\"nofollow\">GitHub CEO 澄清自己没有泄漏源代码事件</a>，<br>\n不知道这背后的原因是什么，反正 GitHub 并没有去如期的验证身份堵上这个漏洞，而且这个漏洞是空开的秘密了。于是大家纷纷转向使用 GPG 来验证仓库，现在已经不少大型仓库都要求你的 commit 是经过签名的，而 GitHub 支持 GPG 签名（目前好像只支持它），那么使用 GPG 不仅仅是时髦的事情，必须是要求自己去做的事情，于是我学习了 GPG 的使用方法。</p>\n<h3 dir=\"auto\">使用 GPG</h3>\n<p dir=\"auto\">这方面由于更新和维护，以及其他的问题出现，对此我很可能是过时的，这里我推荐这个地址</p>\n<p dir=\"auto\"><a href=\"https://gist.github.com/troyfontaine/18c9146295168ee9ca2b30c00bd1b41e\">Methods of Signing with GPG</a></p>\n<p dir=\"auto\">按照上面的步骤一步步的基本上能够安装好。<br>\n当然使用 jetbrain 公司的 IDE 也支持 GPG ， 参考它自己的文档不是很够，把上面的步骤做完，我的 Webstrom 2022 EAP 就快速识别了 GPG ，后面几乎不用我动手直接完成了签名，不得不说它做的真不错，可惜我买了一年的许可证刚过期，而老版本不支持 GPG （默默吐槽一下 Webstorm 更新解决的问题真的不太够，这方面真的要向 VS code 看看）。</p>\n<h3 dir=\"auto\">参考文章</h3>\n<ul dir=\"auto\">\n<li><a href=\"https://www.jetbrains.com/help/webstorm/set-up-GPG-commit-signing.html\" rel=\"nofollow\">Sign commits with GPG keys</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/76861431\" rel=\"nofollow\">在Github上使用GPG的全过程</a></li>\n<li><a href=\"https://stackoverflow.com/questions/39494631/gpg-failed-to-sign-the-data-fatal-failed-to-write-commit-object-git-2-10-0\" rel=\"nofollow\">gpg failed to sign the data fatal</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/managing-commit-signature-verification/displaying-verification-statuses-for-all-of-your-commits\">Displaying verification statuses for all of your commits</a></li>\n<li><a href=\"https://dev.to/martiliones/how-i-got-linus-torvalds-in-my-contributors-on-github-3k4g\" rel=\"nofollow\">How I got Linus Torvalds in my contributors on GitHub</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=24994746\" rel=\"nofollow\">GitHub Source Code Leak</a></li>\n</ul>","bodyText":"GPG 即 GnuPG 是一种混合加密程序，使用场景是邮件加密、文件加密和Git签名等等这些需要加密保护的地方， 是PGP 的开源免费实现。\n简单的说是为了 Git 签名才去了解这个东西的，给自己的 commit 添加一个绿标验证自己\n\n而且在 Mac 环境下，这个东西确实也蛮方便。\n假如你不使用这个东西，会有几个小小安全问题在 GitHub 这个平台上\n例如前段时间的恶作剧  Linus Torvalds delete linux because it sucks\n\n因此你可以利用它，让 Linus Torvalds 大神成为你某个 repo 的 contributors  🤪，（我不支持这样的恶作剧 ）这篇文章在这\n\n以及之前的 GitHub CEO 澄清自己没有泄漏源代码事件，\n不知道这背后的原因是什么，反正 GitHub 并没有去如期的验证身份堵上这个漏洞，而且这个漏洞是空开的秘密了。于是大家纷纷转向使用 GPG 来验证仓库，现在已经不少大型仓库都要求你的 commit 是经过签名的，而 GitHub 支持 GPG 签名（目前好像只支持它），那么使用 GPG 不仅仅是时髦的事情，必须是要求自己去做的事情，于是我学习了 GPG 的使用方法。\n使用 GPG\n这方面由于更新和维护，以及其他的问题出现，对此我很可能是过时的，这里我推荐这个地址\nMethods of Signing with GPG\n按照上面的步骤一步步的基本上能够安装好。\n当然使用 jetbrain 公司的 IDE 也支持 GPG ， 参考它自己的文档不是很够，把上面的步骤做完，我的 Webstrom 2022 EAP 就快速识别了 GPG ，后面几乎不用我动手直接完成了签名，不得不说它做的真不错，可惜我买了一年的许可证刚过期，而老版本不支持 GPG （默默吐槽一下 Webstorm 更新解决的问题真的不太够，这方面真的要向 VS code 看看）。\n参考文章\n\nSign commits with GPG keys\n在Github上使用GPG的全过程\ngpg failed to sign the data fatal\nDisplaying verification statuses for all of your commits\nHow I got Linus Torvalds in my contributors on GitHub\nGitHub Source Code Leak","category":{"id":"DIC_kwDOF33ty84B-m5Y","name":"Article","emoji":":memo:","description":"My blog articles"},"comments":{"nodes":[]},"createdAt":"2022-03-29T05:24:14Z","labels":{"nodes":[]},"lastEditedAt":"2022-03-29T05:38:28Z","number":10,"publishedAt":"2022-03-29T05:24:14Z","resourcePath":"/JunQu/blog/discussions/10","title":"在 Mac 环境使用 GPG 对 Git Commit 进行签名","updatedAt":"2022-03-29T05:38:28Z","upvoteCount":1,"url":"https://github.com/JunQu/blog/discussions/10","viewerCanDelete":true,"urlPath":"在-Mac-环境使用-GPG-对-Git-Commit-进行签名-10"}]},"__N_SSG":true}